<?php

global $more_types_settings, $wp_taxonomies;

// print_r($wp_taxonomies);

if (!$this->navigation) {

//	$more_types_settings->navigation_bar(array());

	echo '<p>';
	_e('Here you can create your own post types. This can be used to extend what WordPress can do, beyond the scope of posts and pages.', 'more-plugins');
	echo '</p>';

	$defaults = array('page', 'post', 'attachment', 'revision', 'nav_menu_item'); 

	$titles = array(__('Post type', 'more-plugins'), __('Based on', 'more-plugins'), __('Actions', 'more-plugins'));
	$more_types_settings->table_header($titles);
	$nbr = 0;
	$types  = $more_types_settings->read_data();
	$total = 0;
	foreach ($types as $type) if (!$type['saved']) $total++;
	foreach ($types as $name => $tax) {
		if (!$tax['saved']) {
			$class = (in_array($name, $defaults)) ? 'default-taxonomy' : '';
			$warning = ($class) ? '<em>' . __('*', 'more-plugins') . '</em>' : '';
			$data = array(
				$more_types_settings->settings_link($tax['label'], array('navigation' => 'post_type', 'keys' => $tax['name'])) . $warning,
				ucfirst($tax['capability_type']),
				$more_types_settings->settings_link(__('Edit', 'more-plugins'), array('navigation' => 'post_type', 'keys' => $tax['name'])) . ' | ' .
				$more_types_settings->settings_link(__('Delete', 'more-plugins'), array('action' => 'delete', 'keys' => $tax['name'], 'class' => 'more-common-delete')) . ' | ' .
				$more_types_settings->settings_link(__('Export', 'more-plugins'), array('navigation' => 'export', 'keys' => $tax['name'])) . 
				$more_types_settings->updown_link($nbr, $total)
			);
		} else {
			$data = array($tax['label'], ucfirst($tax['capability_type']), __('This post type is generated by a file - no actions', 'more-plugins'));
		}

		$more_types_settings->table_row($data, $nbr++, $class);
	}

	$more_types_settings->table_footer($titles);

	$options = array('title' => __('Add Post Type', 'more-plugins'), 'action' => 'add', 'navigation' => 'post_type');
	$more_types_settings->add_button($options);

/*
?>

	<h3 class="more-advanced-settings-toggle"><a href="#">Advanced settings <span>show/hide</span></a></h3>
	<div class="more-advanced-settings" style="display: none;">
	<table class="form-table">

	<?php
// 		'array' => array('supports', 'more_type_cap', 'more_edit_cap', 'more_others_cap', 'more_others_cap', 'more_delete_cap', 'taxonomies')

		echo '<p>';
		_e('Some settings?');
		echo '</p>';
		
		$roles = $more_types_settings->get_roles();
		$row = array(__('Hide comment menu item', 'more-plugins'), $more_types_settings->settings_bool('more_hide_comments'));
		$more_types_settings->setting_row($row);

		$row = array(__('Hide links menu item', 'more-plugins'), $more_types_settings->settings_bool('more_hide_links'));
		$more_types_settings->setting_row($row);

		$row = array(__('Hide links menu item for', 'more-plugins'), $more_types_settings->checkbox_list('more_hide_comments', $roles));
		$more_types_settings->setting_row($row);


	?>

	</table>
	</div>
	
<?php
*/

} else if ($this->navigation == 'post_type') {

	// Set up the navigation
	$navtext = $more_types_settings->data[$more_types_settings->keys[0]]['label'];
	if (!$navtext) $navtext = __('Add new', 'more-plugins');
	$more_types_settings->navigation_bar(array($navtext));
?>
	<?php $url = $more_types_settings->settings_link(false, array('action' => 'save', 'keys' => implode(',', $more_types_settings->keys))); ?>
	<form method="post" action="<?php echo $url; ?>">
	<table class="form-table">
	
	<?php
	
		$comment = __('This is the plural name of the post type, e.g. \'Reviews\'.', 'more-plugins');
		$comment = $more_types_settings->format_comment($comment);
		$row = array(__('Post type name plural', 'more-plugins'), $more_types_settings->settings_input('label') . $comment);
		$more_types_settings->setting_row($row);

		$comment = __('This is the singular name of the post type, e.g. \'Review\'.', 'more-plugins');
		$comment = $more_types_settings->format_comment($comment);
		$row = array(__('Post type name singular', 'more-plugins'), $more_types_settings->settings_input('singular_label') . $comment);
		$more_types_settings->setting_row($row);

		$row = array(__('Description', 'more-plugins'), $more_types_settings->settings_textarea('description'));
		$more_types_settings->setting_row($row);

		$comment = __('Inherit capabilities from either post/page,', 'more-plugins');
		$comment = $more_types_settings->format_comment($comment);
		$type = array('post' => 'Post', 'page' => 'Page');
		$row = array(__('Based on', 'more-plugins'), $more_types_settings->settings_radiobuttons('capability_type', $type) . $comment);
		$more_types_settings->setting_row($row);

		$comment = __('Specify a URL for a custom menu icon. The standard size is 16 &times; 16 pixels', 'more-plugins');
		$comment = $more_types_settings->format_comment($comment);
		$row = array(__('Menu icon', 'more-plugins'), $more_types_settings->settings_input('menu_icon') . $comment);
		$more_types_settings->setting_row($row);

		$templates = $more_types_settings->get_templates();
		$comment = __('Select a template that handles this post type.', 'more-plugins');
		$comment = $more_types_settings->format_comment($comment);
		$row = array(__('Post type template', 'more-plugins'), $more_types_settings->settings_select('template', $templates) . $comment);
		$more_types_settings->setting_row($row);

		$comment = __('Enables post type items to be children of other items of the same post type. E.g. in a standard WordPress installation, posts are not heirarchical whilst pages are.', 'more-plugins');
		$comment = $more_types_settings->format_comment($comment);
		$row = array(__('Hierarchical', 'more-plugins'), $more_types_settings->settings_bool('hierarchical') . $comment);
		$more_types_settings->setting_row($row);



//		$types = $more_types_settings->get_post_types();
//		$row = array(__('Available to', 'more-plugins'), $more_types_settings->checkbox_list('object_type', $types));
//		$more_types_settings->setting_row($row);


		$comment = __('These are the input boxes available to this post type.', 'more-plugins');
		$comment = $more_types_settings->format_comment($comment);
		$boxes = $more_types_settings->get_boxes();
		$row = array(__('Features', 'more-plugins'), $more_types_settings->checkbox_list('supports', $boxes) . $comment);
		$more_types_settings->setting_row($row);


		$title =  __('Additional boxes', 'more-plugins');
		// The other boxes
		global $wp_meta_boxes;
		$data = $wp_meta_boxes[$pages[$id]['based_on']];
		$boxes = array();
		foreach ((array) $data as $context) {
			foreach ((array) $context as $priority) {
				foreach ((array) $priority as $box) {
					// if (array_key_exists($box['title'], $more_fields)) continue;
					if ($box['title']) {
						$boxes[$box['id']] = $box['title'];
					}
				}
			}						
		}
		if (!empty($boxes)) $row = array(__('Additional boxes', 'more-plugins'), $more_types_settings->checkbox_list('supports', $boxes));
		else {
			$comment = sprintf(__('There are no additional content boxes - but you can create new ones with our plugin More Fields %s!', 'more-plugins'), '<a href="http://wordpress.org/extend/plugins/more-fields/">More Fields</a>');
			$comment = $more_types_settings->format_comment($comment);
			$row = array(__('Additional boxes', 'more-plugins'), $comment);
		}
		$more_types_settings->setting_row($row);


		$tax = array();
		foreach($wp_taxonomies as $taxonomy) {
			$tax[$taxonomy->name] = $taxonomy->label;
		}
		// sprintf(_n('%d Plugin Update', '%d Plugin Updates', $plugin_update_count)
		// 		add_meta_box( "add-{$id}", sprintf( __('Add %s'), $tax->label ), 'wp_nav_menu_item_taxonomy_metabox', 'nav-menus', 'side', 'default', $tax );

//		$comment = sprintf(__('%d Plugin Update', '%d Plugin Updates', $plugin_update_count)
		$comment = sprintf(__('You can create more taxonomies to use with your post types using our plugin %s!', 'more-plugins'), '<a href="http://wordpress.org/extend/plugins/more-taxonomies/">More Taxonomies</a>');
		$comment = $more_types_settings->format_comment($comment);
		$row = array(__('Taxonomies', 'more-plugins'), $more_types_settings->checkbox_list('taxonomies', $tax) . $comment);
		$more_types_settings->setting_row($row);

	?>

	</table>

<div class="more-plugins-advanced-settings">
	<h3 class="more-advanced-settings-toggle"><a href="#">Advanced settings <span>show/hide</span></a></h3>
	<div class="more-advanced-settings" style="display: none;">
	<table class="form-table">
	
	<?php	
			$comment = __('Use permalinks for this post-type', 'more-plugins');
			$comment = $more_types_settings->format_comment($comment);
			$row = array(__('Enable permalinks', 'more-plugins'), $more_types_settings->settings_bool('rewrite_bool') . $comment);
			$more_types_settings->setting_row($row);

			$comment = __('The permalink base for this post type', 'more-plugins');
			$comment = $more_types_settings->format_comment($comment);
			$row = array(__('Permalink base', 'more-plugins'), $more_types_settings->settings_input('rewrite_slug') . $comment);
			$more_types_settings->setting_row($row);		
		
			$comment = __('Allows visitors to query this type.', 'more-plugins');
			$comment = $more_types_settings->format_comment($comment);
			$row = array(__('Publically queryable', 'more-plugins'), $more_types_settings->settings_bool('publicly_queryable') . $comment);
			$more_types_settings->setting_row($row);

			$comment = __('Exclude this post type when a visitor searches the website for content.', 'more-plugins');
			$comment = $more_types_settings->format_comment($comment);
			$row = array(__('Exclude from search', 'more-plugins'), $more_types_settings->settings_bool('exclude_from_search') . $comment);
			$more_types_settings->setting_row($row);
			
			$comment = __('Show posts of this type in the admin UI. Setting this to false  hides this post type for all users.', 'more-plugins');
			$comment = $more_types_settings->format_comment($comment);
			$row = array(__('Show in admin', 'more-plugins'), $more_types_settings->settings_bool('public') . $comment);
			$more_types_settings->setting_row($row);

			$comment = __('Whether to generate a default UI for managing this post type', 'more-plugins');
			$comment = $more_types_settings->format_comment($comment);
			$row = array(__('Show UI', 'more-plugins'), $more_types_settings->settings_bool('show_ui') . $comment);
			$more_types_settings->setting_row($row);
	
		?>
		
		
		<caption>
			<?php _e('User capabilities for this post type.' ,'more-plugins'); ?>
		</caption>
	<?php
// 		'array' => array('supports', 'more_type_cap', 'more_edit_cap', 'more_others_cap', 'more_others_cap', 'more_delete_cap', 'taxonomies')

		$roles = $more_types_settings->get_roles();

		$comment = __('User roles capable of editing own objects from this post type.');
		$comment = $more_types_settings->format_comment($comment);
		$row = array(__('Edit capability', 'more-plugins') . $comment, $more_types_settings->checkbox_list('more_edit_cap', $roles) );
		$more_types_settings->setting_row($row);

		$comment = __('User roles capable of editing own multiple objects from this post type.');
		$comment = $more_types_settings->format_comment($comment);		
		$row = array(__('Edit multiple', 'more-plugins') . $comment, $more_types_settings->checkbox_list('more_edit_type_cap', $roles));
		$more_types_settings->setting_row($row);

		$comment = __('User roles capable of editing other users objects from this post type.');
		$comment = $more_types_settings->format_comment($comment);
		$row = array(__('Edit not owned by user', 'more-plugins') . $comment, $more_types_settings->checkbox_list('more_edit_others_cap', $roles));
		$more_types_settings->setting_row($row);

		$comment = __('User roles capable of publishing objects from this post type.');
		$comment = $more_types_settings->format_comment($comment);
		$row = array(__('Publish capability', 'more-plugins') . $comment, $more_types_settings->checkbox_list('more_publish_others_cap', $roles));
		$more_types_settings->setting_row($row);	

		$comment = __('User roles capable of deleting objects from this post type.');
		$comment = $more_types_settings->format_comment($comment);
		$row = array(__('Delete capability', 'more-plugins') . $comment, $more_types_settings->checkbox_list('more_delete_cap', $roles));
		$more_types_settings->setting_row($row);
	
		$comment = __('User roles capable of reading objects from this post type.');
		$comment = $more_types_settings->format_comment($comment);
		$row = array(__('Read capability', 'more-plugins') . $comment, $more_types_settings->checkbox_list('more_read_cap', $roles));
		$more_types_settings->setting_row($row);
	?>

	</table>
	</div>
</div>
	
	<input type="hidden" name="keys" value="<?php echo implode(',', $more_types_settings->selected); ?>">
	<input type="hidden" name="action" value="save">
	<input type="submit" class="button" value="<?php _e('Save'); ?>">
	</form>

	<?php
}

global $wp_roles;
	echo '<pre>';
	//print_r($more_types_settings->data);
	echo '</pre>';



?>